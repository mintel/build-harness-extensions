## Tanka helpers

ifdef app
GENERATE_ARGS+=--app $(app)
endif
ifdef env
GENERATE_ARGS+=--env $(env)
endif

TK_APPLY_FLAGS ?= --apply-strategy=server --force

.PHONY: k8s/tanka/charts/vendor k8s/tanka/charts/patch k8s/tanka/fmt k8s/tanka/fmt-test k8s/tanka/generate k8s/tanka/generate/% k8s/tanka/apply/% k8s/tanka/delete/% k8s/tanka/update-chart/% k8s/tanka/new-app/%

## Vendor charts
k8s/tanka/charts/vendor:
ifneq ("$(wildcard ./chartfile.yaml)", "")
ifdef ALWAYS_VENDOR_CHARTS
	@IFS=',' read -ra ADDR <<< "${ALWAYS_VENDOR_CHARTS}"; \
	for i in "$${ADDR[@]}"; do \
	rm -rf "charts/$$i"; \
	done
endif
	@tk tool charts vendor
endif

## Check if there are any patch files in the charts/ directory and apply them to the relevant charts
k8s/tanka/charts/patch:
ifneq ("$(wildcard ./charts)", "")
ifneq ("$(wildcard ./charts/*.patch)", "")
	@for f in charts/*.patch; do \
		patch -d charts -p0 < $$f; \
	done
endif
endif

## Update Helm Chart
k8s/tanka/update-chart/%:
	@@${BUILD_HARNESS_EXTENSIONS_PATH}/modules/k8s/tanka/update-helm-chart.sh $*

## Format Jsonnet files with tanka
k8s/tanka/fmt: satoshi/check-deps
	tk fmt .

## Test formatting of Jsonnet files and exit with non-zero when changes would be made
k8s/tanka/fmt-test: satoshi/check-deps
	tk fmt --test .

## Generate manifests using tanka
k8s/tanka/generate: satoshi/check-deps jsonnet/install k8s/tanka/charts/vendor k8s/tanka/charts/patch
	@@${BUILD_HARNESS_EXTENSIONS_PATH}/modules/k8s/tanka/generate.sh $(GENERATE_ARGS)

## Generate manifests of specific app using tanka
k8s/tanka/generate/%: satoshi/check-deps jsonnet/install k8s/tanka/charts/vendor
	@@${BUILD_HARNESS_EXTENSIONS_PATH}/modules/k8s/tanka/generate.sh --app $*

## Apply rendered manifests of an app to the local cluster
k8s/tanka/apply/%: satoshi/check-deps
	@app="$*"; \
	tk apply environments/$$app/local $(TK_APPLY_FLAGS) --target 'CustomResourceDefinition/.*' || true; \
	tk apply environments/$$app/local $(TK_APPLY_FLAGS)

## Removes rendered manifests of an app from the local cluster
k8s/tanka/delete/%: satoshi/check-deps
	@app="$*"; \
	tk delete environments/$$app/local

## Creates a new app in the existing repo
k8s/tanka/add/%: satoshi/check-deps
	@@${BUILD_HARNESS_EXTENSIONS_PATH}/modules/k8s/tanka/new-app.sh $*
